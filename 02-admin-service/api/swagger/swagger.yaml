swagger: "2.0"
info:
  version: "1.0.0"
  title: AdminPro-service
host: localhost:8080
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /alive:
    x-swagger-router-controller: misc
    get:
      description:  Get service status
      operationId: alive
      responses:
        "200":
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /v1/user:
    x-swagger-router-controller: user
    get:
      tags:
       - User
      description:  Get all users
      operationId: get
      responses:
        "200":
          description: Success
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags:
       - User
      description: Register new user
      operationId: add
      parameters:
        - name: data
          in: body
          description: The user information
          required: true
          schema:
            type: object
            required:
              - name
              - email
              - password
            properties:
              name:
                $ref: "#/definitions/NameParam"
              email:
                $ref: "#/definitions/EmailParam"
              password:
                $ref: "#/definitions/PasswordParam"
      responses:
        "200":
          description: Success
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/user/{id}:
    x-swagger-router-controller: user
    get:
      tags:
        - User
      description:  Get service status
      operationId: getUserById
      parameters:
        - name: id
          in: path
          type: string
          description: The user id
          required: true
      responses:
        "200":
          description: Success
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    put:
      tags: 
        - User
      description: Update user data
      operationId: update
      parameters:
        - name: id
          in: path
          type: string
          description: The id of user for remove
          required: true
        - name: data
          in: body
          description: The user information
          required: true
          schema:
            type: object
            required:
              - name
              - email
              - password
            properties:
              name:
                $ref: "#/definitions/NameParam"
              email:
                $ref: "#/definitions/EmailParam"
              password:
                $ref: "#/definitions/PasswordParam"
      responses:
        "200":
          description: Success
          schema:
            type: object
            required:
              - name
              - email
            properties:
              name:
                type: string
              password: 
                type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      
    delete:
      tags:
        - User
      description: Remove one user from database
      operationId: delete
      parameters:
        - name: id
          in: path
          type: string
          description: The id of user for remove
          required: true
      responses:
        "200":
          description: Success
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw

definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string

  SuccessResponse:
    required:
      - result
    properties:
      result:
        type: boolean

  NameParam:
    type: string
    minLength: 3
    maxLength: 30
    pattern: "[a-zA-ZÁÉÍÓÚáéíóúÜü]"

  EmailParam:
    type: string
    format: email
    minLength: 6
    maxLength: 96

  PasswordParam:
    type: string
    minLength: 6
    maxLength: 64
    pattern: "^[^\\s]+$"
